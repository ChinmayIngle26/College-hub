
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin
    function isAdmin() {
      // True if the user is authenticated and their email is admin@gmail.com
      return request.auth != null && request.auth.token.email == "admin@gmail.com";
    }

    // Users collection
    // Allow users to read their own data, and admins to read any user data.
    // Allow users to create their own user document upon signup.
    // Allow users to update their own data, and admins to update any user data.
    // Only admins can delete user documents.
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow update: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin(); // Only admins can delete user documents

      // Disallow access to subcollections under users for now
      match /{document=**} {
        allow read, write: if false;
      }
    }

    // System Settings
    // System settings should be publicly readable for application configuration.
    // Only admins can write (create, update, delete) system settings.
    match /systemSettings/{docId} {
      allow read: if true; // Publicly readable for app configuration
      allow write: if isAdmin(); // create, update, delete restricted to admin

      // Disallow access to subcollections under systemSettings
      match /{document=**} {
        allow read, write: if false;
      }
    }

    // Leave Applications
    // Students can create their own leave applications.
    // Students can read their own leave applications. Admins can read any.
    // Only admins can update (e.g., approve/reject) or delete leave applications.
    match /leaveApplications/{applicationId} {
      allow create: if request.auth != null && request.resource.data.studentId == request.auth.uid;
      allow read: if request.auth != null && (resource.data.studentId == request.auth.uid || isAdmin());
      allow update: if isAdmin(); // Only admins can update status
      allow delete: if isAdmin();

      // Disallow access to subcollections under leaveApplications
      match /{document=**} {
        allow read, write: if false;
      }
    }
    // Rule for querying the leaveApplications collection
    // Authenticated users are allowed to list/query.
    // The actual documents returned are then filtered by the document-level read rule above.
    match /leaveApplications {
      allow list: if request.auth != null;
      // Disallow direct collection-level operations other than list, as they are handled by document rules.
      allow create: if false;
      allow update: if false;
      allow delete: if false;
      allow read: if false; // Document reads are handled by /leaveApplications/{applicationId}
    }

    // Default deny all other paths not explicitly matched.
    // This is a security best practice.
    match /{path=**}/documents/{document} {
      allow read, write: if false;
    }
  }
}
