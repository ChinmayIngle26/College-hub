
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow authenticated users to read their own document
      allow read: if request.auth != null && request.auth.uid == userId;

      // Allow authenticated users to create their own document (e.g., during signup)
      // Ensure they can only set their role to 'student' by default
      // Allow updates to their own profile (e.g. name, major) but not role by non-admins
      allow create: if request.auth != null && request.auth.uid == userId &&
                       request.resource.data.role == 'student'; // Ensure new users are students
      allow update: if request.auth != null && request.auth.uid == userId &&
                       request.resource.data.role == resource.data.role; // Prevent non-admins from changing role

      // Admins can read, write (create, update, delete) any user document
      allow read, write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Default deny all other collections/paths unless explicitly allowed
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
