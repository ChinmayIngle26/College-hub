
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // Rules for 'users' collection
    match /users/{userId} {
      // Allow users to read their own profile
      allow read: if request.auth != null && request.auth.uid == userId;

      // Allow users to create their own profile upon signup (if not admin creating it)
      allow create: if request.auth != null && request.auth.uid == userId;
      // Allow admins to create, update, and delete any user profile
      allow create, update, delete: if request.auth != null && isAdmin(request.auth.uid);

      // Allow users to update their own profile (e.g., non-critical fields)
      // More granular control might be needed here (e.g., disallow role change by non-admin)
      allow update: if request.auth != null && request.auth.uid == userId;
      // Add rule for listing users (only for admins)
      allow list: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Rules for 'systemSettings' collection
    match /systemSettings/{settingsDocId} {
      // Allow authenticated users to read system settings (e.g., for maintenance mode check client-side)
      allow read: if request.auth != null;

      // Allow ONLY admins to write (create/update) system settings
      allow write: if request.auth != null && isAdmin(request.auth.uid);

      // No public list access for system settings
      allow list: if false;
    }

    // Default deny all other paths
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
