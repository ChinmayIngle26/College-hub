
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user is an admin
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // User documents
    // Users can:
    // - Read their own document.
    // - Create their own document upon signup.
    // - Update their own document.
    // - Delete their own document.
    // Admins can:
    // - Read any user document.
    // - Create, update, and delete any user document.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow create: if request.auth != null && (request.auth.uid == userId || isAdmin()); // Admin can create users too
      allow update: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow delete: if request.auth != null && (request.auth.uid == userId || isAdmin());

      // Disallow direct access to subcollections under a user document by default
      match /{document=**} {
        allow read, write: if false;
      }
    }

    // System Settings
    // - Any authenticated user can read system settings (e.g., for application name in title).
    // - Only admins can create, update, or delete system settings.
    match /systemSettings/{docId} { // Using {docId} as it's typically a single config document
      allow read: if request.auth != null;
      allow create, update, delete: if isAdmin();

      // Disallow direct access to subcollections under systemSettings by default
      match /{document=**} {
        allow read, write: if false;
      }
    }

    // Default deny for any other paths not explicitly matched
    match /{path=**}/documents/{document} {
      allow read, write: if false;
    }
  }
}
