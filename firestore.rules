
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin
    function isAdmin() {
      return request.auth != null && request.auth.token.email == "admin@gmail.com";
    }

    // --- Users Collection ---
    match /users/{userId} {
      // Allow users to create their own profile
      allow create: if request.auth != null && request.auth.uid == userId;
      // Allow users to read their own profile, or admins to read any profile
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      // Allow users to update their own profile (including parentEmail), or admins to update any profile
      allow update: if request.auth != null && (request.auth.uid == userId || isAdmin());
      // Only admins can delete user profiles from Firestore
      // (Note: This doesn't delete the Firebase Auth user)
      allow delete: if isAdmin();

      // Disallow access to subcollections under users for now
      match /{document=**} {
        allow read, write: if false;
      }
    }

    // --- System Settings Collection ---
    // Singleton document for app-wide settings
    match /systemSettings/{docId} { // docId would typically be 'appConfiguration'
      // Anyone can read system settings (e.g., for maintenance mode check, app name)
      allow read: if true; // Public read access
      // Only admins can create, update, or delete system settings
      allow create, update, delete: if isAdmin();

      // Disallow access to subcollections under systemSettings
      match /{document=**} {
        allow read, write: if false;
      }
    }

    // --- Leave Applications Collection ---
    match /leaveApplications/{applicationId} {
      // Students can create their own leave applications
      allow create: if request.auth != null && request.resource.data.studentId == request.auth.uid;
      // Students can read their own applications; Admins can read any application
      allow read: if request.auth != null && (resource.data.studentId == request.auth.uid || isAdmin());
      // Only admins can update (e.g., approve/reject status) or delete applications
      allow update, delete: if isAdmin();

      // Disallow listing directly on a specific document path
      allow list: if false;
    }

    // Rules for querying the leaveApplications collection
    match /leaveApplications {
      // Allow authenticated users to query (list) the collection.
      // Document-level read rules and client-side queries (e.g., where('studentId', '==', auth.uid))
      // will ensure they only retrieve documents they are permitted to read.
      allow list: if request.auth != null;
      // Create is handled at the document level (/{applicationId})
      allow create: if false; // Cannot create at collection level
      allow read, update, delete: if false; // Operations on the collection path itself are disallowed.
    }

    // Deny all other access by default to any other unspecified paths
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
