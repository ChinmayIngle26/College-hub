
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isAdmin() {
      // Check if user is signed in and if their role is 'admin' in their user document
      // Also allow a hardcoded admin email for initial setup or fallback.
      return isSignedIn() && 
             (request.auth.token.email == "admin@gmail.com" || getUserData(request.auth.uid).role == 'admin');
    }

    function isFaculty() {
      return isSignedIn() && getUserData(request.auth.uid).role == 'faculty';
    }

    // Users collection
    // - Users can read their own profile.
    // - Users can update their own profile (specific fields might be restricted later for approval).
    // - Admins can read, list, create, update any user profile.
    // - Faculty can read student profiles (e.g., for classroom rosters, assuming studentIds are UIDs).
    match /users/{userId} {
      allow read: if isSignedIn() && (isUser(userId) || isAdmin() || isFaculty());
      allow list: if isAdmin() || isFaculty(); // Faculty might need to list users to add to classrooms (consider implications)
      allow create: if isAdmin(); // Only admins can create user profiles (signup creates auth, admin creates Firestore doc)
      allow update: if isUser(userId) || isAdmin(); // Users can update their own, admins can update any
      allow delete: if isAdmin(); // Only admins can delete user profiles
    }

    // System Settings collection
    // - Publicly readable for application configuration (e.g., maintenance mode).
    // - Only writable by admins.
    match /systemSettings/{docId} {
      allow read: if true; // Settings like maintenance mode, app name need to be readable by all
      allow write: if isAdmin();
    }

    // Profile Change Requests collection
    // - Students can create requests for their own profile changes.
    // - Admins can read, list, and update (approve/deny) requests.
    // - Students can read their own requests to see status.
    match /profileChangeRequests/{requestId} {
      allow read: if isSignedIn() && (isAdmin() || request.resource.data.userId == request.auth.uid);
      allow list: if isAdmin(); // Only admins list all requests
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId; // User can only create for themselves
      allow update: if isAdmin(); // Only admins can update status (approve/deny)
      allow delete: if false; // Keep records for history, or restrict to admin later
    }
    
    // Classrooms collection
    // - Faculty can create classrooms, where facultyId matches their UID.
    // - Faculty can read/update/delete classrooms they own.
    // - Students can read classrooms they are part of (if studentIds list is checked, or keep it simpler for now).
    // - Admins can manage all classrooms.
    match /classrooms/{classroomId} {
      allow read: if isSignedIn() && (isAdmin() || isFaculty()); // Faculty can read all, or refine later
      allow list: if isSignedIn() && (isAdmin() || isFaculty()); // Faculty can list their own, Admin can list all
      allow create: if isFaculty() && request.auth.uid == request.resource.data.facultyId;
      allow update: if isAdmin() || (isFaculty() && request.resource.data.facultyId == request.auth.uid);
      allow delete: if isAdmin() || (isFaculty() && request.resource.data.facultyId == request.auth.uid);
    }

    // Lecture Attendance collection
    // - Faculty can create attendance records for classrooms they own.
    // - Students can read their own attendance records.
    // - Admins can read all attendance records.
    match /lectureAttendance/{recordId} {
      allow read: if isSignedIn() && (isAdmin() || request.resource.data.studentId == request.auth.uid || (isFaculty() && request.resource.data.facultyId == request.auth.uid));
      allow list: if isSignedIn() && (isAdmin() || isFaculty()); // Admins can list all, faculty can list their own submissions.
      allow create: if isFaculty() && request.auth.uid == request.resource.data.facultyId; // Faculty creates records for their students
      allow update: if isAdmin() || (isFaculty() && request.resource.data.facultyId == request.auth.uid); // Faculty might need to correct an entry.
      allow delete: if isAdmin(); // Admins can delete.
    }

  }
}
